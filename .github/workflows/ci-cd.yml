name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    name: Test Backend (.NET)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: |
          cd api
          dotnet restore Ecommerce.sln

      - name: Build
        run: |
          cd api
          dotnet build Ecommerce.sln --no-restore --configuration Release

      - name: Run tests
        run: |
          cd api
          dotnet test Ecommerce.sln --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults/ --logger "trx;LogFileName=test_results.trx"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results
          path: api/TestResults/
          retention-days: 7
  test-frontend:
    name: Test Frontend (React)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Apply npm rollup workaround
        run: |
          cd web
          rm -rf package-lock.json node_modules
          npm install

      - name: Run ESLint
        run: |
          cd web
          npm run lint

      - name: Run tests
        run: |
          cd web
          npm run test

      - name: Build
        run: |
          cd web
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: web/dist/
          retention-days: 7

  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API Docker image
        run: |
          cd api
          docker build -t ecommerce-api:latest .

      - name: Build Web Docker image
        run: |
          cd web
          docker build -t ecommerce-web:latest .

      - name: Test Docker images
        run: |
          docker images
