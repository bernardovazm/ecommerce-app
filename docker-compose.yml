services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce
      POSTGRES_MULTIPLE_DATABASES: ecommerce,sonarqube
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U postgres -d ecommerce"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 60s
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app-network

  api:
    build:
      context: ./api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Host=db;Port=5432;Database=ecommerce;Username=postgres;Password=postgres
      - ConnectionStrings__RabbitMQ=rabbitmq
      - JWT_SECRET_KEY=example-development-secret-key-sample
    ports:
      - "7000:8080"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks:
      - app-network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    networks:
      - app-network

  sonarqube:
    image: sonarqube:10.4-community
    container_name: sonarqube
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
      - SONAR_JDBC_USERNAME=postgres
      - SONAR_JDBC_PASSWORD=postgres
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    ports:
      - "9000:9000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_logs:/opt/sonarqube/logs
      - sonar_extensions:/opt/sonarqube/extensions
    networks:
      - app-network
      - sonarnet
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

volumes:
  db-data:
  sonar_data:
  sonar_logs:
  sonar_extensions:

networks:
  app-network:
    driver: bridge
  sonarnet:
    driver: bridge
